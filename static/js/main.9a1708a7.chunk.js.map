{"version":3,"sources":["Components/Form/FormElements.ts","Components/Form/Form.tsx","Redux/features/userSlice.ts","Components/Header/HeaderElements.ts","Components/Header/Header.tsx","Components/Button/ButtonElements.ts","Components/Button/Button.tsx","Components/TextInput/TextInputElements.ts","Components/TextInput/TextInput.tsx","Components/LoginForm/LoginFormElements.tsx","axios.ts","Components/LoginForm/LoginForm.tsx","Components/Wrapper/WrapperElements.ts","Components/Wrapper/Wrapper.tsx","Pages/LoginPage.tsx","Components/BackArrow/BackArrowElements.ts","Components/BackArrow/BackArrow.tsx","Components/RegisterForm/RegisterFormElements.ts","Components/RegisterForm/RegisterForm.tsx","Pages/RegisterPage.tsx","Components/ToDoGroup/ToDoGroupElements.ts","Components/ToDoGroup/ToDoGroup.tsx","Components/ToDoList/ToDoListElements.ts","Components/ToDoList/ToDoList.tsx","Components/Modal/ModalElements.ts","Components/TaskInput/TaskInputElements.ts","Components/TaskInput/TaskInput.tsx","Components/TaskAdd/TaskAddElements.ts","Components/TaskAdd/TaskAdd.tsx","Components/Modal/Modal.tsx","Pages/UserPage.tsx","App.tsx","Redux/app/store.ts","serviceWorker.ts","index.tsx"],"names":["FormWrapper","styled","div","FormContainer","Form","children","userSlice","createSlice","name","initialState","user","jwt","reducers","login","state","action","payload","logout","actions","selectUser","HeaderContainer","header","Logo","LogOutIcons","Header","dispatch","useDispatch","onClick","width","height","viewBox","fill","xmlns","d","id","ButtonContainerBig","color","Button","text","Input","input","TextInput","placeholder","value","type","onChange","e","target","LoginFormContainer","FormTitle","h1","TextInputContainer","OrDiv","CreateAccountButton","instance","axios","create","baseURL","LoginForm","useState","setUser","password","setPassword","handleLoginClick","a","post","identifier","then","res","data","username","catch","err","console","log","to","WrapperContainer","Wrapper","LoginPage","Arrow","BackArrow","RegisterFormContainer","RegisterForm","email","setEmail","passwordRepeate","setPasswordRepeat","handleRegisterCilck","RegisterPage","ToDoGroupWrapper","GroupName","h2","GroupDate","GroupCompleted","DeleteIconContainer","ToDoGroup","date","tasks","setTaskGroup","taskGroup","taskCompleted","setTaskCompleted","taskUncompleted","setTaskUncompleted","useSelector","handleDeleteItems","delete","headers","Authorization","filter","el","useEffect","isDone","style","display","justifyContent","Date","toLocaleDateString","length","ToDoListWrapper","SearchBar","SortButton","button","SortButtonIcon","props","sort","AddToDoGroup","Pluscontainer","PlusLine1","PlusLine2","ToDoList","setSearch","searchField","setActiveModal","sortActive","setSortActive","textAlign","ModalWrapper","ModalContainer","HorizontalLine","ButtonContainer","SmallButton","ApplyContainer","CloseButton","TaskInputContainer","TaskInputField","done","TaskInput","setTasks","setName","handleChange","val1","val2","index","findIndex","task","g","slice","upDateNameTask","Checkbox","checked","upDateItem","TaskAdd","newTaskName","setNewTaskName","readOnly","Modal","groupId","upDateList","setGroupId","setUpDateList","listName","setListName","upDated","setUpdated","fetchTask","get","handleSaveTask","put","map","item","shortid","generate","UserPage","setSearchField","activeModal","filterTask","includes","handleClickGroup","b","created_at","App","exact","path","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9a1708a7.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const FormWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: calc(245px - 119px);\r\n`\r\nexport const FormContainer = styled.div`\r\n    width: 893px;\r\n    height: 1045px;\r\n    background: #2d2d2d;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: relative;\r\n`\r\n","import React, { ReactChild } from 'react'\r\nimport { FormContainer, FormWrapper } from './FormElements'\r\n\r\ninterface CoolProps {\r\n    children: ReactChild[] | ReactChild\r\n}\r\n\r\nconst Form = ({ children }: CoolProps) => {\r\n    return (\r\n        <FormWrapper>\r\n            <FormContainer>{children}</FormContainer>\r\n        </FormWrapper>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { createSlice } from '@reduxjs/toolkit'\n\ninterface CoolState {\n    user: string | null\n    jwt: string | null\n}\n\nconst initialState: CoolState = {\n    user: null,\n    jwt: null,\n}\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        login: (state, action) => {\n            state.user = action.payload.user\n            state.jwt = action.payload.jwt\n        },\n        logout: (state) => {\n            state.user = null\n            state.jwt = null\n        },\n    },\n})\n\nexport const { login, logout } = userSlice.actions\n\nexport const selectUser = (state: any) => state.user\n\nexport default userSlice.reducer\n","import styled from 'styled-components'\r\nexport const HeaderContainer = styled.header`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 20px 15px 20px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\nexport const Logo = styled.div`\r\n    font-family: 'ZCOOL KuaiLe', cursive;\r\n    font-size: 64px;\r\n    color: #ff9900;\r\n`\r\n\r\nexport const LogOutIcons = styled.div`\r\n    cursor: pointer;\r\n    transition: all 100ms ease-in;\r\n    :hover {\r\n        scale: 1.05;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../Redux/features/userSlice'\r\nimport { HeaderContainer, Logo, LogOutIcons } from './HeaderElements'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <HeaderContainer>\r\n            <Logo>To-Do-List</Logo>\r\n            <LogOutIcons onClick={() => dispatch(logout())}>\r\n                <svg\r\n                    width=\"85\"\r\n                    height=\"85\"\r\n                    viewBox=\"0 0 85 85\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <g clip-path=\"url(#clip0)\">\r\n                        <path\r\n                            d=\"M53.1244 46.0425C51.166 46.0425 49.583 47.6293 49.583 49.5839V63.7508C49.583 65.7021 47.9962 67.2922 46.041 67.2922H35.4161V14.1678C35.4161 11.1432 33.4894 8.44097 30.5926 7.43516L29.544 7.08432H46.041C47.9962 7.08432 49.583 8.67442 49.583 10.6264V21.2513C49.583 23.2058 51.166 24.7927 53.1244 24.7927C55.0829 24.7927 56.6659 23.2058 56.6659 21.2513V10.6264C56.6659 4.76856 51.8988 0.00149536 46.041 0.00149536H7.96867C7.83378 0.00149536 7.72094 0.0618052 7.58995 0.0793143C7.41939 0.0650476 7.25662 0.00149536 7.08348 0.00149536C3.17696 0.00149536 0 3.17781 0 7.08432V70.8337C0 73.8582 1.92667 76.5605 4.82348 77.5663L26.1375 84.6712C26.8599 84.8943 27.5784 85.0006 28.3333 85.0006C32.2398 85.0006 35.4161 81.8236 35.4161 77.9171V74.3757H46.041C51.8988 74.3757 56.6659 69.6087 56.6659 63.7508V49.5839C56.6659 47.6293 55.0829 46.0425 53.1244 46.0425Z\"\r\n                            fill=\"#FF9900\"\r\n                        />\r\n                        <path\r\n                            d=\"M83.9616 32.9134L69.7946 18.7471C68.7823 17.7341 67.259 17.4293 65.9348 17.978C64.6138 18.5272 63.7494 19.8197 63.7494 21.2509V31.8758H49.5831C47.6279 31.8758 46.041 33.462 46.041 35.4172C46.041 37.3724 47.6279 38.9586 49.5831 38.9586H63.7494V49.5835C63.7494 51.0147 64.6138 52.3072 65.9348 52.8564C67.259 53.4051 68.7823 53.1003 69.7946 52.088L83.9616 37.921C85.3461 36.5365 85.3461 34.2979 83.9616 32.9134Z\"\r\n                            fill=\"#FF9900\"\r\n                        />\r\n                    </g>\r\n                    <defs>\r\n                        <clipPath id=\"clip0\">\r\n                            <rect width=\"85\" height=\"85\" fill=\"white\" />\r\n                        </clipPath>\r\n                    </defs>\r\n                </svg>\r\n            </LogOutIcons>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nexport const ButtonContainerBig = styled.div`\r\n    width: 315px;\r\n    height: 89px;\r\n    background: ${({ color }) => color};\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    font-size: 36px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 64px;\r\n    transition: all 100ms ease-in;\r\n    cursor: pointer;\r\n    :hover {\r\n        scale: 1.05;\r\n    }\r\n`\r\n\r\nexport const ButtonContainerSmall = styled.div`\r\n    width: 128px;\r\n    height: 44px;\r\n    background: ${({ color }) => color};\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n`\r\n","import React from 'react'\r\nimport { ButtonContainerBig } from './ButtonElements'\r\n\r\ninterface CoolProps {\r\n    text: string\r\n    color: string\r\n    onClick: any\r\n}\r\n\r\nconst Button = ({ text, color, onClick }: CoolProps) => {\r\n    return (\r\n        <ButtonContainerBig color={color} onClick={() => onClick()}>\r\n            {text}\r\n        </ButtonContainerBig>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import styled from 'styled-components'\r\n\r\nexport const Input = styled.input`\r\n    width: ${({ width }) => width};\r\n    height: 50px;\r\n    background: #ffffff;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    outline: none;\r\n    font-weight: 300;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    margin-top: 36px;\r\n`\r\n","import React, { Dispatch, SetStateAction } from 'react'\r\nimport { Input } from './TextInputElements'\r\n\r\ninterface CoolProps {\r\n    placeholder: string\r\n    value: string\r\n    type: string\r\n    width: string\r\n    onChange: Dispatch<SetStateAction<string>>\r\n}\r\n\r\nconst TextInput = ({\r\n    placeholder,\r\n    value,\r\n    type,\r\n    width,\r\n    onChange,\r\n}: CoolProps) => {\r\n    return (\r\n        <Input\r\n            type={type}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            width={width}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextInput\r\n","import styled from 'styled-components'\r\n\r\nexport const LoginFormContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const FormTitle = styled.h1`\r\n    font-size: 64px;\r\n    line-height: 75px;\r\n    text-align: center;\r\n    color: #ff9900;\r\n    margin-top: 70px;\r\n`\r\nexport const TextInputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 187px;\r\n    align-items: center;\r\n`\r\nexport const OrDiv = styled.div`\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    margin-top: 64px;\r\n`\r\nexport const CreateAccountButton = styled.div`\r\n    font-weight: 300;\r\n    font-size: 48px;\r\n    line-height: 56px;\r\n    color: #ff9900;\r\n    margin-top: 63px;\r\n    cursor: pointer;\r\n`\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: ' https://recruitment.ultimate.systems',\r\n})\r\n\r\nexport default instance\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '../Button/Button'\r\nimport TextInput from '../TextInput/TextInput'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    CreateAccountButton,\r\n    FormTitle,\r\n    LoginFormContainer,\r\n    OrDiv,\r\n    TextInputContainer,\r\n} from './LoginFormElements'\r\nimport axios from '../../axios'\r\nimport { login } from '../../Redux/features/userSlice'\r\n\r\nconst LoginForm = () => {\r\n    const [user, setUser] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLoginClick = async () => {\r\n        await axios\r\n            .post('/auth/local', {\r\n                identifier: user,\r\n                password: password,\r\n            })\r\n            .then((res) => {\r\n                dispatch(\r\n                    login({\r\n                        user: res.data.user.username,\r\n                        jwt: res.data.jwt,\r\n                    })\r\n                )\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <LoginFormContainer>\r\n            <FormTitle>Login</FormTitle>\r\n            <TextInputContainer>\r\n                <TextInput\r\n                    placeholder=\"Login\"\r\n                    type=\"text\"\r\n                    value={user}\r\n                    onChange={setUser}\r\n                    width=\"600px\"\r\n                />\r\n                <TextInput\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={setPassword}\r\n                    width=\"600px\"\r\n                />\r\n                <Button\r\n                    color=\"#FF9900\"\r\n                    text=\"Login\"\r\n                    onClick={handleLoginClick}\r\n                />\r\n                <OrDiv>\r\n                    <span>or</span>\r\n                </OrDiv>\r\n                <Link to=\"/register\">\r\n                    <CreateAccountButton>\r\n                        <span>create an account</span>\r\n                    </CreateAccountButton>\r\n                </Link>\r\n            </TextInputContainer>\r\n        </LoginFormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import styled from 'styled-components'\r\n\r\nexport const WrapperContainer = styled.div`\r\n    width: 100%;\r\n    min-height: 1553px;\r\n    position: relative;\r\n`\r\n","import React, { ReactChild } from 'react'\r\nimport { WrapperContainer } from './WrapperElements'\r\n\r\ninterface CoolProps {\r\n    children: ReactChild\r\n}\r\n\r\nconst Wrapper = ({ children }: CoolProps) => {\r\n    return <WrapperContainer>{children}</WrapperContainer>\r\n}\r\n\r\nexport default Wrapper\r\n","import React from 'react'\r\nimport Form from '../Components/Form/Form'\r\nimport Header from '../Components/Header/Header'\r\nimport LoginForm from '../Components/LoginForm/LoginForm'\r\nimport Wrapper from '../Components/Wrapper/Wrapper'\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <Wrapper>\r\n            <>\r\n                <Header />\r\n                <Form>\r\n                    <LoginForm />\r\n                </Form>\r\n            </>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import styled from 'styled-components'\r\n\r\nexport const Arrow = styled.div`\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n    transition: all 100ms ease-in;\r\n    cursor: pointer;\r\n    :hover {\r\n        scale: 1.05;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { Arrow } from './BackArrowElements'\r\n\r\nconst BackArrow = () => {\r\n    return (\r\n        <Arrow>\r\n            <svg\r\n                width=\"69\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 69 24\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path\r\n                    d=\"M0.939339 10.9393C0.353554 11.5251 0.353554 12.4749 0.939339 13.0607L10.4853 22.6066C11.0711 23.1924 12.0208 23.1924 12.6066 22.6066C13.1924 22.0208 13.1924 21.0711 12.6066 20.4853L4.12132 12L12.6066 3.51472C13.1924 2.92894 13.1924 1.97919 12.6066 1.3934C12.0208 0.807616 11.0711 0.807617 10.4853 1.3934L0.939339 10.9393ZM69 10.5L2 10.5L2 13.5L69 13.5L69 10.5Z\"\r\n                    fill=\"white\"\r\n                />\r\n            </svg>\r\n        </Arrow>\r\n    )\r\n}\r\n\r\nexport default BackArrow\r\n","import styled from 'styled-components'\r\n\r\nexport const RegisterFormContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n`\r\nexport const FormTitle = styled.h1`\r\n    font-size: 64px;\r\n    line-height: 75px;\r\n    text-align: center;\r\n    color: #ff9900;\r\n    margin-top: 70px;\r\n`\r\nexport const TextInputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 187px;\r\n    align-items: center;\r\n`\r\nexport const OrDiv = styled.div`\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    margin-top: 64px;\r\n`\r\nexport const CreateAccountButton = styled.div`\r\n    font-weight: 300;\r\n    font-size: 48px;\r\n    line-height: 56px;\r\n    color: #ff9900;\r\n    margin-top: 63px;\r\n    cursor: pointer;\r\n`\r\n","import React, { useState } from 'react'\r\nimport Button from '../Button/Button'\r\nimport TextInput from '../TextInput/TextInput'\r\nimport {\r\n    FormTitle,\r\n    RegisterFormContainer,\r\n    TextInputContainer,\r\n} from './RegisterFormElements'\r\nimport axios from '../../axios'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../../Redux/features/userSlice'\r\n\r\nconst RegisterForm = () => {\r\n    const [user, setUser] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [passwordRepeate, setPasswordRepeat] = useState<string>('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleRegisterCilck = async () => {\r\n        await axios\r\n            .post('/auth/local/register', {\r\n                username: user,\r\n                email: email,\r\n                password: password,\r\n            })\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch(\r\n                    login({\r\n                        user: res.data.user.username,\r\n                        jwt: res.data.jwt,\r\n                    })\r\n                )\r\n            })\r\n        console.log('register')\r\n    }\r\n\r\n    return (\r\n        <RegisterFormContainer>\r\n            <FormTitle>Login</FormTitle>\r\n            <TextInputContainer>\r\n                <TextInput\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    value={user}\r\n                    onChange={setUser}\r\n                    width=\"600px\"\r\n                />\r\n                <TextInput\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={setEmail}\r\n                    width=\"600px\"\r\n                />\r\n                <TextInput\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={setPassword}\r\n                    width=\"600px\"\r\n                />\r\n                <TextInput\r\n                    placeholder=\"Repeat password\"\r\n                    type=\"password\"\r\n                    value={passwordRepeate}\r\n                    onChange={setPasswordRepeat}\r\n                    width=\"600px\"\r\n                />\r\n                <Button\r\n                    color=\"#FF9900\"\r\n                    text=\"Create\"\r\n                    onClick={handleRegisterCilck}\r\n                />\r\n            </TextInputContainer>\r\n        </RegisterFormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport BackArrow from '../Components/BackArrow/BackArrow'\r\nimport Form from '../Components/Form/Form'\r\nimport Header from '../Components/Header/Header'\r\nimport RegisterForm from '../Components/RegisterForm/RegisterForm'\r\nimport Wrapper from '../Components/Wrapper/Wrapper'\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <Wrapper>\r\n            <>\r\n                <Header />\r\n                <Form>\r\n                    <RegisterForm />\r\n                    <Link to=\"/\">\r\n                        <BackArrow />\r\n                    </Link>\r\n                </Form>\r\n            </>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import styled from 'styled-components'\r\n\r\nexport const ToDoGroupWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100px;\r\n    background: #2d2d2d;\r\n    border-radius: 8px;\r\n    margin-top: 36px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    transition: all 100ms ease-in;\r\n    cursor: pointer;\r\n    :hover {\r\n        scale: 1.05;\r\n    }\r\n`\r\nexport const GroupName = styled.h2`\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n`\r\nexport const GroupDate = styled.h2`\r\n    font-style: italic;\r\n    font-weight: normal;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n`\r\nexport const GroupCompleted = styled.h2`\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n`\r\nexport const DeleteIconContainer = styled.div`\r\n    transition: all 100ms ease-in;\r\n    :hover {\r\n        color: red;\r\n        scale: 1.1;\r\n    }\r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    DeleteIconContainer,\r\n    GroupCompleted,\r\n    GroupDate,\r\n    GroupName,\r\n    ToDoGroupWrapper,\r\n} from './ToDoGroupElements'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport axios from '../../axios'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../../Redux/features/userSlice'\r\ninterface CoolProps {\r\n    id: number\r\n    name: string\r\n    date: string\r\n    tasks: any[]\r\n    setTaskGroup: any\r\n    taskGroup: any\r\n    onClick: () => void\r\n}\r\n\r\ninterface CoolTask {\r\n    isDone: boolean\r\n}\r\n\r\nconst ToDoGroup = ({\r\n    id,\r\n    name,\r\n    date,\r\n    tasks,\r\n    setTaskGroup,\r\n    taskGroup,\r\n    onClick,\r\n}: CoolProps) => {\r\n    const [taskCompleted, setTaskCompleted] = useState<any[]>([])\r\n    const [taskUncompleted, setTaskUncompleted] = useState<any[]>([])\r\n    const { jwt } = useSelector(selectUser)\r\n    const filterCompletedTask = () => {\r\n        if (tasks) {\r\n            setTaskCompleted(tasks.filter((el: CoolTask) => el.isDone === true))\r\n            setTaskUncompleted(\r\n                tasks.filter((el: CoolTask) => el.isDone === false)\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleDeleteItems = async () => {\r\n        await axios\r\n            .delete(`/to-do-lists/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(res)\r\n                // Nie można dodać taska do głównej grupy\r\n                setTaskGroup(taskGroup.filter((el: any) => el.id !== id))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        filterCompletedTask()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tasks])\r\n\r\n    return (\r\n        <ToDoGroupWrapper>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    width: '95%',\r\n                }}\r\n                onClick={() => onClick()}\r\n            >\r\n                <GroupName>{name}</GroupName>\r\n                <GroupDate>\r\n                    Created at: {new Date(date).toLocaleDateString()}\r\n                </GroupDate>\r\n                <GroupCompleted>\r\n                    Completed: {taskCompleted.length} Uncomplted:{' '}\r\n                    {taskUncompleted.length} All:{' '}\r\n                    {taskUncompleted.length + taskCompleted.length}\r\n                </GroupCompleted>\r\n            </div>\r\n            <DeleteIconContainer>\r\n                <DeleteIcon onClick={() => handleDeleteItems()} />\r\n            </DeleteIconContainer>\r\n        </ToDoGroupWrapper>\r\n    )\r\n}\r\n\r\nexport default ToDoGroup\r\n","import styled from 'styled-components'\r\nexport const ToDoListWrapper = styled.div`\r\n    width: 1175px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-bottom: 45px;\r\n    position: relative;\r\n`\r\nexport const SearchBar = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const SortButton = styled.button`\r\n    width: 265px;\r\n    height: 50px;\r\n    background: #ffffff;\r\n    border-radius: 8px;\r\n    font-style: normal;\r\n    font-weight: 300;\r\n    font-size: 24px;\r\n    margin-top: 36px;\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    transition: all 100ms ease-in;\r\n    :hover {\r\n        scale: 1.05;\r\n    }\r\n    :active {\r\n        scale: 0.95;\r\n    }\r\n`\r\ntype SortButtonType = {\r\n    sort?: boolean\r\n}\r\n\r\nexport const SortButtonIcon = styled.div<SortButtonType>`\r\n    position: absolute;\r\n    transition: all 100ms ease-in;\r\n    transform: ${(props: any) =>\r\n        props.sort ? 'rotate(0deg)' : 'rotate(180deg)'};\r\n`\r\n\r\nexport const AddToDoGroup = styled.div`\r\n    position: absolute;\r\n    bottom: -40px;\r\n    right: 30px;\r\n    width: 104px;\r\n    height: 104px;\r\n    background: #ffffff;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    border-radius: 999px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    transition: all 100ms ease-in;\r\n    :hover {\r\n        scale: 1.05;\r\n    }\r\n    :active {\r\n        scale: 0.95;\r\n    }\r\n`\r\nexport const Pluscontainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nexport const PlusLine1 = styled.div`\r\n    width: 78px;\r\n    height: 0px;\r\n    border: 5px solid #ff9900;\r\n    transform: rotate(-180deg);\r\n`\r\nexport const PlusLine2 = styled.div`\r\n    position: absolute;\r\n    width: 78px;\r\n    height: 0px;\r\n    border: 5px solid #ff9900;\r\n    transform: rotate(90deg);\r\n`\r\n","import React, { ReactChild } from 'react'\r\nimport TextInput from '../TextInput/TextInput'\r\nimport {\r\n    AddToDoGroup,\r\n    Pluscontainer,\r\n    PlusLine1,\r\n    PlusLine2,\r\n    SearchBar,\r\n    SortButton,\r\n    SortButtonIcon,\r\n    ToDoListWrapper,\r\n} from './ToDoListElements'\r\n\r\ninterface CoolProps {\r\n    children: ReactChild\r\n    setSearch: any\r\n    searchField: string\r\n    setActiveModal?: any\r\n    sortActive: boolean\r\n    setSortActive: any\r\n}\r\n\r\nconst ToDoList = ({\r\n    children,\r\n    setSearch,\r\n    searchField,\r\n    setActiveModal,\r\n    sortActive,\r\n    setSortActive,\r\n}: CoolProps) => {\r\n    return (\r\n        <ToDoListWrapper>\r\n            <SearchBar>\r\n                <TextInput\r\n                    placeholder=\"Search\"\r\n                    value={searchField}\r\n                    width=\"482px\"\r\n                    type=\"text\"\r\n                    onChange={setSearch}\r\n                />\r\n                <SortButton onClick={() => setSortActive(!sortActive)}>\r\n                    <SortButtonIcon sort={sortActive}>\r\n                        <svg\r\n                            width=\"26\"\r\n                            height=\"21\"\r\n                            viewBox=\"0 0 26 21\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M13 0L25.1244 21H0.875645L13 0Z\"\r\n                                fill=\"#C4C4C4\"\r\n                            />\r\n                        </svg>\r\n                    </SortButtonIcon>\r\n                    <span style={{ width: '100%', textAlign: 'center' }}>\r\n                        Sort by\r\n                    </span>\r\n                </SortButton>\r\n            </SearchBar>\r\n            {children}\r\n            <AddToDoGroup onClick={() => setActiveModal(true)}>\r\n                <Pluscontainer>\r\n                    <PlusLine1 />\r\n                    <PlusLine2 />\r\n                </Pluscontainer>\r\n            </AddToDoGroup>\r\n        </ToDoListWrapper>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n","import styled from 'styled-components'\r\n\r\nexport const ModalWrapper = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    backdrop-filter: blur(2px);\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\nexport const ModalContainer = styled.div`\r\n    width: 1162px;\r\n    height: 1312px;\r\n    background: #2d2d2d;\r\n    margin-top: 136px;\r\n    padding-right: 37px;\r\n    padding-left: 37px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\nexport const HorizontalLine = styled.div`\r\n    border: 4px solid #ff9900;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    width: 1088px;\r\n    height: 0px;\r\n    margin-top: 61px;\r\n`\r\nexport const ButtonContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n`\r\nexport const SmallButton = styled.button`\r\n    width: 128px;\r\n    height: 44px;\r\n    background: ${({ color }) => color};\r\n    border-radius: 8px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 100ms ease-in;\r\n    cursor: pointer;\r\n    color: white;\r\n    :nth-child(2) {\r\n        margin-left: 20px;\r\n    }\r\n    :hover {\r\n        scale: 1.05;\r\n    }\r\n`\r\n\r\nexport const ApplyContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    padding-bottom: 24px;\r\n    align-items: center;\r\n`\r\nexport const CloseButton = styled.div`\r\n    font-style: normal;\r\n    font-weight: 300;\r\n    font-size: 48px;\r\n    margin-top: 64px;\r\n    color: #ff9900;\r\n    cursor: pointer;\r\n`\r\nexport const Input = styled.input`\r\n    width: ${({ width }) => width};\r\n    height: 50px;\r\n    background: #ffffff;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    outline: none;\r\n    font-weight: 300;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    margin-top: 36px;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const TaskInputContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    margin-top: 24px;\r\n`\r\ntype TextStye = {\r\n    done?: boolean\r\n}\r\n\r\nexport const TaskInputField = styled.input<TextStye>`\r\n    width: 1043px;\r\n    background-color: transparent;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    border-bottom: 1px solid #ff9900;\r\n    color: white;\r\n    text-decoration: ${(props) => (props.done ? 'line-through' : 'none')};\r\n    outline: none;\r\n`\r\nexport const DeleteIconContainer = styled.div`\r\n    transition: all 100ms ease-in;\r\n    cursor: pointer;\r\n    :hover {\r\n        color: red;\r\n        scale: 1.1;\r\n    }\r\n`\r\n","import { Checkbox } from '@material-ui/core'\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport React, { useState } from 'react'\r\nimport {\r\n    DeleteIconContainer,\r\n    TaskInputContainer,\r\n    TaskInputField,\r\n} from './TaskInputElements'\r\ninterface CoolProps {\r\n    value: string\r\n    id: number\r\n    isDone?: boolean\r\n    tasks: any[]\r\n    setTasks: any\r\n}\r\nconst TaskInput = ({ value, id, isDone, tasks, setTasks }: CoolProps) => {\r\n    const [name, setName] = useState(value)\r\n\r\n    const upDateItem = (id: number, val1: string, val2: boolean) => {\r\n        let index = tasks.findIndex((task) => task.id === id)\r\n\r\n        let g = tasks[index]\r\n        g[val1] = val2\r\n        if (index === -1) {\r\n            console.log('nie ma taska')\r\n        } else {\r\n            setTasks([...tasks.slice(0, index), g, ...tasks.slice(index + 1)])\r\n        }\r\n    }\r\n\r\n    const upDateNameTask = (id: number, val1: string, val2: string) => {\r\n        let index = tasks.findIndex((task) => task.id === id)\r\n\r\n        let g = tasks[index]\r\n        g[val1] = val2\r\n        if (index === -1) {\r\n            console.log('nie ma taska')\r\n        } else {\r\n            setTasks([...tasks.slice(0, index), g, ...tasks.slice(index + 1)])\r\n        }\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setTasks(tasks.filter((el: any) => el.id !== id))\r\n    }\r\n\r\n    const handleChange = (e: string) => {\r\n        setName(e)\r\n        upDateNameTask(id, 'name', e)\r\n    }\r\n\r\n    return (\r\n        <TaskInputContainer>\r\n            <Checkbox\r\n                checked={isDone}\r\n                onChange={() => upDateItem(id, 'isDone', !isDone)}\r\n            />\r\n            <TaskInputField\r\n                done={isDone}\r\n                placeholder=\"Task\"\r\n                value={name}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n            />\r\n            <DeleteIconContainer onClick={() => handleDelete()}>\r\n                <Delete />\r\n            </DeleteIconContainer>\r\n        </TaskInputContainer>\r\n    )\r\n}\r\n\r\nexport default TaskInput\r\n","import styled from 'styled-components'\r\n\r\nexport const TaskInputContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    margin-top: 24px;\r\n`\r\nexport const TaskInputField = styled.input`\r\n    width: 1043px;\r\n    background-color: transparent;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    border-bottom: 1px solid #ff9900;\r\n    color: white;\r\n    outline: none;\r\n`\r\n","import React, { Dispatch, SetStateAction, useState } from 'react'\r\nimport { ButtonContainer, SmallButton } from '../Modal/ModalElements'\r\nimport { TaskInputContainer, TaskInputField } from './TaskAddElements'\r\nimport { Checkbox } from '@material-ui/core'\r\n\r\ninterface CoolProps {\r\n    tasks: any[]\r\n    setTasks: Dispatch<SetStateAction<any[]>>\r\n}\r\nconst TaskAdd = ({ tasks, setTasks }: CoolProps) => {\r\n    const [newTaskName, setNewTaskName] = useState<string>('')\r\n\r\n    const handleSubmitTask = () => {\r\n        setTasks([...tasks, { name: newTaskName, isDone: false }])\r\n        console.log(tasks)\r\n        setNewTaskName('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TaskInputContainer>\r\n                <Checkbox checked={false} readOnly />\r\n                <TaskInputField\r\n                    placeholder=\"Task\"\r\n                    value={newTaskName}\r\n                    onChange={(e) => setNewTaskName(e.target.value)}\r\n                />\r\n            </TaskInputContainer>\r\n            <ButtonContainer>\r\n                <SmallButton color=\"#FF3D00\" onClick={() => setNewTaskName('')}>\r\n                    CANCEL\r\n                </SmallButton>\r\n                <SmallButton color=\"#FF9900\" onClick={() => handleSubmitTask()}>\r\n                    ADD\r\n                </SmallButton>\r\n            </ButtonContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskAdd\r\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\r\nimport {\r\n    ApplyContainer,\r\n    CloseButton,\r\n    HorizontalLine,\r\n    Input,\r\n    ModalContainer,\r\n    ModalWrapper,\r\n} from './ModalElements'\r\nimport axios from '../../axios'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../../Redux/features/userSlice'\r\nimport TaskInput from '../TaskInput/TaskInput'\r\nimport Button from '../Button/Button'\r\nimport TaskAdd from '../TaskAdd/TaskAdd'\r\nimport shortid from 'shortid'\r\ninterface CoolProps {\r\n    groupId: number | null\r\n    setActiveModal: any\r\n    upDateList: boolean\r\n    setGroupId: Dispatch<SetStateAction<number | null | undefined>>\r\n    setUpDateList: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ninterface CoolTaks {\r\n    name: string\r\n    id: number\r\n    isDone: boolean\r\n}\r\nconst Modal = ({\r\n    groupId,\r\n    setActiveModal,\r\n    upDateList,\r\n    setGroupId,\r\n    setUpDateList,\r\n}: CoolProps) => {\r\n    const [listName, setListName] = useState<string>('')\r\n    const { jwt } = useSelector(selectUser)\r\n    const [tasks, setTasks] = useState<CoolTaks[]>([])\r\n    const [upDated, setUpdated] = useState<boolean>(false)\r\n    const fetchTask = async () => {\r\n        if (groupId) {\r\n            await axios\r\n                .get(`/to-do-lists/${groupId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${jwt}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    setTasks([...res.data.task])\r\n                    setListName(res.data.name)\r\n                    console.log(tasks)\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleSaveTask = async () => {\r\n        if (groupId) {\r\n            await axios\r\n                .put(\r\n                    `/to-do-lists/${groupId}`,\r\n                    {\r\n                        name: listName,\r\n                        task: tasks,\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${jwt}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(res)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n            setGroupId(null)\r\n            setActiveModal(false)\r\n        } else {\r\n            await axios\r\n                .post(\r\n                    '/to-do-lists',\r\n                    {\r\n                        name: listName,\r\n                        task: tasks,\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${jwt}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    setUpdated(!upDated)\r\n                    console.log(res)\r\n                })\r\n                .catch((err) => console.log(err))\r\n            setGroupId(null)\r\n            setUpDateList(!upDateList)\r\n            setActiveModal(false)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setUpDateList(!upDateList)\r\n        setGroupId(null)\r\n        setActiveModal(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(groupId)\r\n        fetchTask()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [groupId])\r\n    return (\r\n        <ModalWrapper>\r\n            <ModalContainer>\r\n                <div>\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"List name\"\r\n                        value={listName}\r\n                        onChange={(e) => setListName(e.target.value)}\r\n                        width=\"100%\"\r\n                    />\r\n                    <HorizontalLine />\r\n                    {tasks?.map((item) => (\r\n                        <TaskInput\r\n                            value={item.name}\r\n                            id={item.id}\r\n                            isDone={item.isDone}\r\n                            key={item.id || shortid.generate()}\r\n                            tasks={tasks}\r\n                            setTasks={setTasks}\r\n                        />\r\n                    ))}\r\n                    <TaskAdd tasks={tasks} setTasks={setTasks} />\r\n                </div>\r\n                <ApplyContainer>\r\n                    <CloseButton onClick={() => handleClose()}>\r\n                        CANCEL\r\n                    </CloseButton>\r\n                    <Button\r\n                        text=\"SAVE\"\r\n                        color=\"#FF9900\"\r\n                        onClick={() => handleSaveTask()}\r\n                    />\r\n                </ApplyContainer>\r\n            </ModalContainer>\r\n        </ModalWrapper>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useEffect, useState } from 'react'\r\nimport Header from '../Components/Header/Header'\r\nimport ToDoGroup from '../Components/ToDoGroup/ToDoGroup'\r\nimport ToDoList from '../Components/ToDoList/ToDoList'\r\nimport Wrapper from '../Components/Wrapper/Wrapper'\r\nimport axios from '../axios'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../Redux/features/userSlice'\r\nimport Modal from '../Components/Modal/Modal'\r\n\r\ninterface ItemData {\r\n    id: number\r\n    name: string\r\n    created_at: string\r\n    task: any[]\r\n}\r\n\r\nconst UserPage = () => {\r\n    const [taskGroup, setTaskGroup] = useState<ItemData[]>([])\r\n    const [searchField, setSearchField] = useState<string>('')\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n    const [groupId, setGroupId] = useState<number | null>()\r\n    const [upDateList, setUpDateList] = useState<boolean>(false)\r\n    const [sortActive, setSortActive] = useState<boolean>(true)\r\n    const { jwt } = useSelector(selectUser)\r\n\r\n    const filterTask = taskGroup.filter((el) => {\r\n        return el.name.includes(searchField)\r\n    })\r\n\r\n    const fetchTask = async () => {\r\n        await axios\r\n            .get('/to-do-lists', {\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                setTaskGroup([...res.data])\r\n            })\r\n    }\r\n\r\n    const handleClickGroup = (item: number) => {\r\n        setGroupId(item)\r\n        setActiveModal(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTask()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [groupId, upDateList])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <>\r\n                <Header />\r\n                <ToDoList\r\n                    setSearch={setSearchField}\r\n                    searchField={searchField}\r\n                    setActiveModal={setActiveModal}\r\n                    sortActive={sortActive}\r\n                    setSortActive={setSortActive}\r\n                >\r\n                    {sortActive ? (\r\n                        <>\r\n                            {filterTask\r\n                                .sort((a: any, b: any) => b - a)\r\n                                .map((item: ItemData) => (\r\n                                    <ToDoGroup\r\n                                        id={item.id}\r\n                                        name={item.name}\r\n                                        date={item.created_at}\r\n                                        tasks={item.task}\r\n                                        taskGroup={taskGroup}\r\n                                        setTaskGroup={setTaskGroup}\r\n                                        key={item.id}\r\n                                        onClick={() =>\r\n                                            handleClickGroup(item.id)\r\n                                        }\r\n                                    />\r\n                                ))}\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {filterTask.map((item: ItemData) => (\r\n                                <ToDoGroup\r\n                                    id={item.id}\r\n                                    name={item.name}\r\n                                    date={item.created_at}\r\n                                    tasks={item.task}\r\n                                    taskGroup={taskGroup}\r\n                                    setTaskGroup={setTaskGroup}\r\n                                    key={item.id}\r\n                                    onClick={() => handleClickGroup(item.id)}\r\n                                />\r\n                            ))}\r\n                        </>\r\n                    )}\r\n                </ToDoList>\r\n                {activeModal && (\r\n                    <Modal\r\n                        groupId={groupId || null}\r\n                        setActiveModal={setActiveModal}\r\n                        setGroupId={setGroupId}\r\n                        setUpDateList={setUpDateList}\r\n                        upDateList={upDateList}\r\n                    />\r\n                )}\r\n            </>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default UserPage\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport LoginPage from './Pages/LoginPage'\nimport RegisterPage from './Pages/RegisterPage'\nimport UserPage from './Pages/UserPage'\nimport { selectUser } from './Redux/features/userSlice'\nconst App = () => {\n    const { user } = useSelector(selectUser)\n\n    return (\n        <Router>\n            {!user ? (\n                <>\n                    <Route exact path=\"/\">\n                        <LoginPage />\n                    </Route>\n                    <Route path=\"/register\">\n                        <RegisterPage />\n                    </Route>\n                </>\n            ) : (\n                <>\n                    <UserPage />\n                </>\n            )}\n        </Router>\n    )\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport userReducer from '../features/userSlice'\nexport const store = configureStore({\n    reducer: {\n        user: userReducer,\n    },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n    ReturnType,\n    RootState,\n    unknown,\n    Action<string>\n>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './Redux/app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}